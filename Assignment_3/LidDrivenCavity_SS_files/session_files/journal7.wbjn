# encoding: utf-8
# 2021 R1
SetScriptVersion(Version="21.1.216")
system1 = GetSystem(Name="FFF")
results1 = system1.GetContainer(ComponentName="Results")
results1.Edit()
solution1 = system1.GetContainer(ComponentName="Solution")
solution1.Edit()
setup1 = system1.GetContainer(ComponentName="Setup")
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "21.1"(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|moving_wall (wall, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|moving_wall (wall, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|moving_wall (wall, id=5)\"))(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 6)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 7)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 8)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 9)(cx-gui-do cx-activate-tab-index \"Wall*Frame4\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"0.01\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
resultsComponent1 = system1.GetComponent(Name="Results")
resultsComponent1.Refresh()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|mine"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|mine"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Materials|Fluid|mine\"))(cx-gui-do cx-set-real-entry-list \"Create/Edit Materials*RealEntry16\" '( 0.01))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|moving_wall (wall, id=5)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|moving_wall (wall, id=5)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|moving_wall (wall, id=5)\"))(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-enable-apply-button \"Wall\")(cx-gui-do cx-set-expression-entry \"Wall*Frame4*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"1\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
resultsComponent1.Refresh()
results1.SendCommand(Command="> autolegend plot=/CONTOUR:Contour 1, view=VIEW:View 1")
results1.SendCommand(Command="""CONTOUR:Contour 1
Apply Instancing Transform = Off
Clip Contour = Off
Colour Map = FLUENT Rainbow
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Constant Contour Colour = Off
Contour Range = Global
Culling Mode = No Culling
Domain List = /DOMAIN GROUP:All Domains
Draw Contours = Off
Font = Sans Serif
Fringe Fill = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Location List = symmetry 1
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Number of Contours = 100
Show Numbers = Off
Specular Lighting = On
Surface Drawing = Smooth Shading
Text Colour = 0, 0, 0
Text Colour Mode = Default
Text Height = 0.024
Transparency = 0.0
Use Face Values = Off
Value List = 0 [Pa],1 [Pa]
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""CONTOUR:Contour 1
Apply Instancing Transform = Off
Clip Contour = Off
Colour Map = FLUENT Rainbow
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Constant Contour Colour = Off
Contour Range = Global
Culling Mode = No Culling
Domain List = /DOMAIN GROUP:All Domains
Draw Contours = Off
Font = Sans Serif
Fringe Fill = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Location List = symmetry 1
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Number of Contours = 1000
Show Numbers = Off
Specular Lighting = On
Surface Drawing = Smooth Shading
Text Colour = 0, 0, 0
Text Colour Mode = Default
Text Height = 0.024
Transparency = 0.0
Use Face Values = Off
Value List = 0 [Pa],1 [Pa]
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""CONTOUR:Contour 1
Apply Instancing Transform = Off
Clip Contour = Off
Colour Map = FLUENT Rainbow
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Constant Contour Colour = Off
Contour Range = Global
Culling Mode = No Culling
Domain List = /DOMAIN GROUP:All Domains
Draw Contours = Off
Font = Sans Serif
Fringe Fill = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Location List = symmetry 1
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Number of Contours = 10000
Show Numbers = Off
Specular Lighting = On
Surface Drawing = Smooth Shading
Text Colour = 0, 0, 0
Text Colour Mode = Default
Text Height = 0.024
Transparency = 0.0
Use Face Values = Off
Value List = 0 [Pa],1 [Pa]
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
results1.Exit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
Save(Overwrite=True)
